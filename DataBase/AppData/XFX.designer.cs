#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataBase.AppData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="xfx.BugLibrary")]
	public partial class XFXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertSysRole(SysRole instance);
    partial void UpdateSysRole(SysRole instance);
    partial void DeleteSysRole(SysRole instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertXFX_Bug(XFX_Bug instance);
    partial void UpdateXFX_Bug(XFX_Bug instance);
    partial void DeleteXFX_Bug(XFX_Bug instance);
    partial void InsertXFX_Collect(XFX_Collect instance);
    partial void UpdateXFX_Collect(XFX_Collect instance);
    partial void DeleteXFX_Collect(XFX_Collect instance);
    partial void InsertXFX_Dictionary(XFX_Dictionary instance);
    partial void UpdateXFX_Dictionary(XFX_Dictionary instance);
    partial void DeleteXFX_Dictionary(XFX_Dictionary instance);
    partial void InsertXFX_DictionaryValue(XFX_DictionaryValue instance);
    partial void UpdateXFX_DictionaryValue(XFX_DictionaryValue instance);
    partial void DeleteXFX_DictionaryValue(XFX_DictionaryValue instance);
    partial void InsertXFX_Navigation(XFX_Navigation instance);
    partial void UpdateXFX_Navigation(XFX_Navigation instance);
    partial void DeleteXFX_Navigation(XFX_Navigation instance);
    partial void InsertSysRoleMenu(SysRoleMenu instance);
    partial void UpdateSysRoleMenu(SysRoleMenu instance);
    partial void DeleteSysRoleMenu(SysRoleMenu instance);
    partial void InsertSysUser_Role(SysUser_Role instance);
    partial void UpdateSysUser_Role(SysUser_Role instance);
    partial void DeleteSysUser_Role(SysUser_Role instance);
    partial void InsertSysPermission(SysPermission instance);
    partial void UpdateSysPermission(SysPermission instance);
    partial void DeleteSysPermission(SysPermission instance);
    partial void InsertSysRole_Permission(SysRole_Permission instance);
    partial void UpdateSysRole_Permission(SysRole_Permission instance);
    partial void DeleteSysRole_Permission(SysRole_Permission instance);
    #endregion
		
		public XFXDataContext() : 
				base(global::DataBase.Properties.Settings.Default.xfx_BugLibraryConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public XFXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XFXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XFXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XFXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Login> Login
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<SysRole> SysRole
		{
			get
			{
				return this.GetTable<SysRole>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<XFX_Bug> XFX_Bug
		{
			get
			{
				return this.GetTable<XFX_Bug>();
			}
		}
		
		public System.Data.Linq.Table<XFX_Collect> XFX_Collect
		{
			get
			{
				return this.GetTable<XFX_Collect>();
			}
		}
		
		public System.Data.Linq.Table<XFX_Dictionary> XFX_Dictionary
		{
			get
			{
				return this.GetTable<XFX_Dictionary>();
			}
		}
		
		public System.Data.Linq.Table<XFX_DictionaryValue> XFX_DictionaryValue
		{
			get
			{
				return this.GetTable<XFX_DictionaryValue>();
			}
		}
		
		public System.Data.Linq.Table<XFX_Navigation> XFX_Navigation
		{
			get
			{
				return this.GetTable<XFX_Navigation>();
			}
		}
		
		public System.Data.Linq.Table<SysRoleMenu> SysRoleMenu
		{
			get
			{
				return this.GetTable<SysRoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<SysUser_Role> SysUser_Role
		{
			get
			{
				return this.GetTable<SysUser_Role>();
			}
		}
		
		public System.Data.Linq.Table<SysPermission> SysPermission
		{
			get
			{
				return this.GetTable<SysPermission>();
			}
		}
		
		public System.Data.Linq.Table<SysRole_Permission> SysRole_Permission
		{
			get
			{
				return this.GetTable<SysRole_Permission>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private System.DateTime _time;
		
		private EntitySet<XFX_Bug> _XFX_Bug;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public Category()
		{
			this._XFX_Bug = new EntitySet<XFX_Bug>(new Action<XFX_Bug>(this.attach_XFX_Bug), new Action<XFX_Bug>(this.detach_XFX_Bug));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_XFX_Bug", Storage="_XFX_Bug", ThisKey="id", OtherKey="category")]
		public EntitySet<XFX_Bug> XFX_Bug
		{
			get
			{
				return this._XFX_Bug;
			}
			set
			{
				this._XFX_Bug.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XFX_Bug(XFX_Bug entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_XFX_Bug(XFX_Bug entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _user_id;
		
		private string _pwd;
		
		private bool _is_alter;
		
		private string _new_pwd;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void Onis_alterChanging(bool value);
    partial void Onis_alterChanged();
    partial void Onnew_pwdChanging(string value);
    partial void Onnew_pwdChanged();
    #endregion
		
		public Login()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_alter", DbType="Bit NOT NULL")]
		public bool is_alter
		{
			get
			{
				return this._is_alter;
			}
			set
			{
				if ((this._is_alter != value))
				{
					this.Onis_alterChanging(value);
					this.SendPropertyChanging();
					this._is_alter = value;
					this.SendPropertyChanged("is_alter");
					this.Onis_alterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string new_pwd
		{
			get
			{
				return this._new_pwd;
			}
			set
			{
				if ((this._new_pwd != value))
				{
					this.Onnew_pwdChanging(value);
					this.SendPropertyChanging();
					this._new_pwd = value;
					this.SendPropertyChanged("new_pwd");
					this.Onnew_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Login", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Login.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Login.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _url;
		
		private System.Nullable<bool> _type;
		
		private System.Nullable<bool> _defaultvalue;
		
		private System.Nullable<bool> _isexpand;
		
		private System.Nullable<int> _pid;
		
		private System.Nullable<int> _roleId;
		
		private System.Nullable<System.DateTime> _time;
		
		private EntitySet<SysRoleMenu> _SysRoleMenu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntypeChanging(System.Nullable<bool> value);
    partial void OntypeChanged();
    partial void OndefaultvalueChanging(System.Nullable<bool> value);
    partial void OndefaultvalueChanged();
    partial void OnisexpandChanging(System.Nullable<bool> value);
    partial void OnisexpandChanged();
    partial void OnpidChanging(System.Nullable<int> value);
    partial void OnpidChanged();
    partial void OnroleIdChanging(System.Nullable<int> value);
    partial void OnroleIdChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    #endregion
		
		public Menu()
		{
			this._SysRoleMenu = new EntitySet<SysRoleMenu>(new Action<SysRoleMenu>(this.attach_SysRoleMenu), new Action<SysRoleMenu>(this.detach_SysRoleMenu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(200)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Bit")]
		public System.Nullable<bool> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultvalue", DbType="Bit")]
		public System.Nullable<bool> defaultvalue
		{
			get
			{
				return this._defaultvalue;
			}
			set
			{
				if ((this._defaultvalue != value))
				{
					this.OndefaultvalueChanging(value);
					this.SendPropertyChanging();
					this._defaultvalue = value;
					this.SendPropertyChanged("defaultvalue");
					this.OndefaultvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isexpand", DbType="Bit")]
		public System.Nullable<bool> isexpand
		{
			get
			{
				return this._isexpand;
			}
			set
			{
				if ((this._isexpand != value))
				{
					this.OnisexpandChanging(value);
					this.SendPropertyChanging();
					this._isexpand = value;
					this.SendPropertyChanged("isexpand");
					this.OnisexpandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int")]
		public System.Nullable<int> pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="Int")]
		public System.Nullable<int> roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_SysRoleMenu", Storage="_SysRoleMenu", ThisKey="id", OtherKey="menu_id")]
		public EntitySet<SysRoleMenu> SysRoleMenu
		{
			get
			{
				return this._SysRoleMenu;
			}
			set
			{
				this._SysRoleMenu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysRoleMenu(SysRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_SysRoleMenu(SysRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRole")]
	public partial class SysRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private EntitySet<SysRoleMenu> _SysRoleMenu;
		
		private EntitySet<SysUser_Role> _SysUser_Role;
		
		private EntitySet<SysRole_Permission> _SysRole_Permission;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public SysRole()
		{
			this._SysRoleMenu = new EntitySet<SysRoleMenu>(new Action<SysRoleMenu>(this.attach_SysRoleMenu), new Action<SysRoleMenu>(this.detach_SysRoleMenu));
			this._SysUser_Role = new EntitySet<SysUser_Role>(new Action<SysUser_Role>(this.attach_SysUser_Role), new Action<SysUser_Role>(this.detach_SysUser_Role));
			this._SysRole_Permission = new EntitySet<SysRole_Permission>(new Action<SysRole_Permission>(this.attach_SysRole_Permission), new Action<SysRole_Permission>(this.detach_SysRole_Permission));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRoleMenu", Storage="_SysRoleMenu", ThisKey="id", OtherKey="role_id")]
		public EntitySet<SysRoleMenu> SysRoleMenu
		{
			get
			{
				return this._SysRoleMenu;
			}
			set
			{
				this._SysRoleMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysUser_Role", Storage="_SysUser_Role", ThisKey="id", OtherKey="role_id")]
		public EntitySet<SysUser_Role> SysUser_Role
		{
			get
			{
				return this._SysUser_Role;
			}
			set
			{
				this._SysUser_Role.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRole_Permission", Storage="_SysRole_Permission", ThisKey="id", OtherKey="role_id")]
		public EntitySet<SysRole_Permission> SysRole_Permission
		{
			get
			{
				return this._SysRole_Permission;
			}
			set
			{
				this._SysRole_Permission.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysRoleMenu(SysRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysRoleMenu(SysRoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
		
		private void attach_SysUser_Role(SysUser_Role entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysUser_Role(SysUser_Role entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
		
		private void attach_SysRole_Permission(SysRole_Permission entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysRole_Permission(SysRole_Permission entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private string _user_nick_name;
		
		private string _user_login_name;
		
		private string _user_pwd;
		
		private string _user_tel;
		
		private string _user_email;
		
		private bool _isopen;
		
		private string _user_role;
		
		private System.DateTime _time;
		
		private EntitySet<Login> _Login;
		
		private EntitySet<XFX_Bug> _XFX_Bug;
		
		private EntitySet<XFX_Collect> _XFX_Collect;
		
		private EntitySet<SysUser_Role> _SysUser_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_nick_nameChanging(string value);
    partial void Onuser_nick_nameChanged();
    partial void Onuser_login_nameChanging(string value);
    partial void Onuser_login_nameChanged();
    partial void Onuser_pwdChanging(string value);
    partial void Onuser_pwdChanged();
    partial void Onuser_telChanging(string value);
    partial void Onuser_telChanged();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void OnisopenChanging(bool value);
    partial void OnisopenChanged();
    partial void Onuser_roleChanging(string value);
    partial void Onuser_roleChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public User()
		{
			this._Login = new EntitySet<Login>(new Action<Login>(this.attach_Login), new Action<Login>(this.detach_Login));
			this._XFX_Bug = new EntitySet<XFX_Bug>(new Action<XFX_Bug>(this.attach_XFX_Bug), new Action<XFX_Bug>(this.detach_XFX_Bug));
			this._XFX_Collect = new EntitySet<XFX_Collect>(new Action<XFX_Collect>(this.attach_XFX_Collect), new Action<XFX_Collect>(this.detach_XFX_Collect));
			this._SysUser_Role = new EntitySet<SysUser_Role>(new Action<SysUser_Role>(this.attach_SysUser_Role), new Action<SysUser_Role>(this.detach_SysUser_Role));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_nick_name", DbType="VarChar(100)")]
		public string user_nick_name
		{
			get
			{
				return this._user_nick_name;
			}
			set
			{
				if ((this._user_nick_name != value))
				{
					this.Onuser_nick_nameChanging(value);
					this.SendPropertyChanging();
					this._user_nick_name = value;
					this.SendPropertyChanged("user_nick_name");
					this.Onuser_nick_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_login_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_login_name
		{
			get
			{
				return this._user_login_name;
			}
			set
			{
				if ((this._user_login_name != value))
				{
					this.Onuser_login_nameChanging(value);
					this.SendPropertyChanging();
					this._user_login_name = value;
					this.SendPropertyChanged("user_login_name");
					this.Onuser_login_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pwd", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string user_pwd
		{
			get
			{
				return this._user_pwd;
			}
			set
			{
				if ((this._user_pwd != value))
				{
					this.Onuser_pwdChanging(value);
					this.SendPropertyChanging();
					this._user_pwd = value;
					this.SendPropertyChanged("user_pwd");
					this.Onuser_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_tel", DbType="VarChar(18)")]
		public string user_tel
		{
			get
			{
				return this._user_tel;
			}
			set
			{
				if ((this._user_tel != value))
				{
					this.Onuser_telChanging(value);
					this.SendPropertyChanging();
					this._user_tel = value;
					this.SendPropertyChanged("user_tel");
					this.Onuser_telChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_email
		{
			get
			{
				return this._user_email;
			}
			set
			{
				if ((this._user_email != value))
				{
					this.Onuser_emailChanging(value);
					this.SendPropertyChanging();
					this._user_email = value;
					this.SendPropertyChanged("user_email");
					this.Onuser_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isopen", DbType="Bit NOT NULL")]
		public bool isopen
		{
			get
			{
				return this._isopen;
			}
			set
			{
				if ((this._isopen != value))
				{
					this.OnisopenChanging(value);
					this.SendPropertyChanging();
					this._isopen = value;
					this.SendPropertyChanged("isopen");
					this.OnisopenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this.Onuser_roleChanging(value);
					this.SendPropertyChanging();
					this._user_role = value;
					this.SendPropertyChanged("user_role");
					this.Onuser_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Login", Storage="_Login", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Login> Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				this._Login.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_XFX_Bug", Storage="_XFX_Bug", ThisKey="id", OtherKey="user_id")]
		public EntitySet<XFX_Bug> XFX_Bug
		{
			get
			{
				return this._XFX_Bug;
			}
			set
			{
				this._XFX_Bug.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_XFX_Collect", Storage="_XFX_Collect", ThisKey="id", OtherKey="user_id")]
		public EntitySet<XFX_Collect> XFX_Collect
		{
			get
			{
				return this._XFX_Collect;
			}
			set
			{
				this._XFX_Collect.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SysUser_Role", Storage="_SysUser_Role", ThisKey="id", OtherKey="user_id")]
		public EntitySet<SysUser_Role> SysUser_Role
		{
			get
			{
				return this._SysUser_Role;
			}
			set
			{
				this._SysUser_Role.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Login(Login entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Login(Login entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_XFX_Bug(XFX_Bug entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_XFX_Bug(XFX_Bug entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_XFX_Collect(XFX_Collect entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_XFX_Collect(XFX_Collect entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SysUser_Role(SysUser_Role entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SysUser_Role(SysUser_Role entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[XFX.Bug]")]
	public partial class XFX_Bug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _user_id;
		
		private System.Nullable<int> _category;
		
		private string _url;
		
		private string _title;
		
		private string _key_values;
		
		private string _description;
		
		private string _anwser;
		
		private bool _iscomplete;
		
		private System.Nullable<System.DateTime> _time;
		
		private EntitySet<XFX_Collect> _XFX_Collect;
		
		private EntityRef<Category> _Category1;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OncategoryChanging(System.Nullable<int> value);
    partial void OncategoryChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onkey_valuesChanging(string value);
    partial void Onkey_valuesChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnanwserChanging(string value);
    partial void OnanwserChanged();
    partial void OniscompleteChanging(bool value);
    partial void OniscompleteChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    #endregion
		
		public XFX_Bug()
		{
			this._XFX_Collect = new EntitySet<XFX_Collect>(new Action<XFX_Collect>(this.attach_XFX_Collect), new Action<XFX_Collect>(this.detach_XFX_Collect));
			this._Category1 = default(EntityRef<Category>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="Int")]
		public System.Nullable<int> category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(190)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_values", DbType="VarChar(350)")]
		public string key_values
		{
			get
			{
				return this._key_values;
			}
			set
			{
				if ((this._key_values != value))
				{
					this.Onkey_valuesChanging(value);
					this.SendPropertyChanging();
					this._key_values = value;
					this.SendPropertyChanged("key_values");
					this.Onkey_valuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anwser", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string anwser
		{
			get
			{
				return this._anwser;
			}
			set
			{
				if ((this._anwser != value))
				{
					this.OnanwserChanging(value);
					this.SendPropertyChanging();
					this._anwser = value;
					this.SendPropertyChanged("anwser");
					this.OnanwserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iscomplete", DbType="Bit NOT NULL")]
		public bool iscomplete
		{
			get
			{
				return this._iscomplete;
			}
			set
			{
				if ((this._iscomplete != value))
				{
					this.OniscompleteChanging(value);
					this.SendPropertyChanging();
					this._iscomplete = value;
					this.SendPropertyChanged("iscomplete");
					this.OniscompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XFX_Bug_XFX_Collect", Storage="_XFX_Collect", ThisKey="id", OtherKey="bug_id")]
		public EntitySet<XFX_Collect> XFX_Collect
		{
			get
			{
				return this._XFX_Collect;
			}
			set
			{
				this._XFX_Collect.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_XFX_Bug", Storage="_Category1", ThisKey="category", OtherKey="id", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.XFX_Bug.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.XFX_Bug.Add(this);
						this._category = value.id;
					}
					else
					{
						this._category = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_XFX_Bug", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.XFX_Bug.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.XFX_Bug.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XFX_Collect(XFX_Collect entity)
		{
			this.SendPropertyChanging();
			entity.XFX_Bug = this;
		}
		
		private void detach_XFX_Collect(XFX_Collect entity)
		{
			this.SendPropertyChanging();
			entity.XFX_Bug = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[XFX.Collect]")]
	public partial class XFX_Collect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private long _bug_id;
		
		private string _url;
		
		private System.DateTime _time;
		
		private EntityRef<User> _User;
		
		private EntityRef<XFX_Bug> _XFX_Bug;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onbug_idChanging(long value);
    partial void Onbug_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public XFX_Collect()
		{
			this._User = default(EntityRef<User>);
			this._XFX_Bug = default(EntityRef<XFX_Bug>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bug_id", DbType="BigInt NOT NULL")]
		public long bug_id
		{
			get
			{
				return this._bug_id;
			}
			set
			{
				if ((this._bug_id != value))
				{
					if (this._XFX_Bug.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbug_idChanging(value);
					this.SendPropertyChanging();
					this._bug_id = value;
					this.SendPropertyChanged("bug_id");
					this.Onbug_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(270) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_XFX_Collect", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.XFX_Collect.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.XFX_Collect.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XFX_Bug_XFX_Collect", Storage="_XFX_Bug", ThisKey="bug_id", OtherKey="id", IsForeignKey=true)]
		public XFX_Bug XFX_Bug
		{
			get
			{
				return this._XFX_Bug.Entity;
			}
			set
			{
				XFX_Bug previousValue = this._XFX_Bug.Entity;
				if (((previousValue != value) 
							|| (this._XFX_Bug.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XFX_Bug.Entity = null;
						previousValue.XFX_Collect.Remove(this);
					}
					this._XFX_Bug.Entity = value;
					if ((value != null))
					{
						value.XFX_Collect.Add(this);
						this._bug_id = value.id;
					}
					else
					{
						this._bug_id = default(long);
					}
					this.SendPropertyChanged("XFX_Bug");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[XFX.Dictionary]")]
	public partial class XFX_Dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _num;
		
		private EntitySet<XFX_DictionaryValue> _XFX_DictionaryValue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnumChanging(int value);
    partial void OnnumChanged();
    #endregion
		
		public XFX_Dictionary()
		{
			this._XFX_DictionaryValue = new EntitySet<XFX_DictionaryValue>(new Action<XFX_DictionaryValue>(this.attach_XFX_DictionaryValue), new Action<XFX_DictionaryValue>(this.detach_XFX_DictionaryValue));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int NOT NULL")]
		public int num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this.OnnumChanging(value);
					this.SendPropertyChanging();
					this._num = value;
					this.SendPropertyChanged("num");
					this.OnnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XFX_Dictionary_XFX_DictionaryValue", Storage="_XFX_DictionaryValue", ThisKey="id", OtherKey="cd")]
		public EntitySet<XFX_DictionaryValue> XFX_DictionaryValue
		{
			get
			{
				return this._XFX_DictionaryValue;
			}
			set
			{
				this._XFX_DictionaryValue.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XFX_DictionaryValue(XFX_DictionaryValue entity)
		{
			this.SendPropertyChanging();
			entity.XFX_Dictionary = this;
		}
		
		private void detach_XFX_DictionaryValue(XFX_DictionaryValue entity)
		{
			this.SendPropertyChanging();
			entity.XFX_Dictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[XFX.DictionaryValue]")]
	public partial class XFX_DictionaryValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _cd;
		
		private int _cdbh;
		
		private string _cdz;
		
		private EntityRef<XFX_Dictionary> _XFX_Dictionary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncdChanging(int value);
    partial void OncdChanged();
    partial void OncdbhChanging(int value);
    partial void OncdbhChanged();
    partial void OncdzChanging(string value);
    partial void OncdzChanged();
    #endregion
		
		public XFX_DictionaryValue()
		{
			this._XFX_Dictionary = default(EntityRef<XFX_Dictionary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cd", DbType="Int NOT NULL")]
		public int cd
		{
			get
			{
				return this._cd;
			}
			set
			{
				if ((this._cd != value))
				{
					if (this._XFX_Dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncdChanging(value);
					this.SendPropertyChanging();
					this._cd = value;
					this.SendPropertyChanged("cd");
					this.OncdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdbh", DbType="Int NOT NULL")]
		public int cdbh
		{
			get
			{
				return this._cdbh;
			}
			set
			{
				if ((this._cdbh != value))
				{
					this.OncdbhChanging(value);
					this.SendPropertyChanging();
					this._cdbh = value;
					this.SendPropertyChanged("cdbh");
					this.OncdbhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdz", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cdz
		{
			get
			{
				return this._cdz;
			}
			set
			{
				if ((this._cdz != value))
				{
					this.OncdzChanging(value);
					this.SendPropertyChanging();
					this._cdz = value;
					this.SendPropertyChanged("cdz");
					this.OncdzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XFX_Dictionary_XFX_DictionaryValue", Storage="_XFX_Dictionary", ThisKey="cd", OtherKey="id", IsForeignKey=true)]
		public XFX_Dictionary XFX_Dictionary
		{
			get
			{
				return this._XFX_Dictionary.Entity;
			}
			set
			{
				XFX_Dictionary previousValue = this._XFX_Dictionary.Entity;
				if (((previousValue != value) 
							|| (this._XFX_Dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XFX_Dictionary.Entity = null;
						previousValue.XFX_DictionaryValue.Remove(this);
					}
					this._XFX_Dictionary.Entity = value;
					if ((value != null))
					{
						value.XFX_DictionaryValue.Add(this);
						this._cd = value.id;
					}
					else
					{
						this._cd = default(int);
					}
					this.SendPropertyChanged("XFX_Dictionary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[XFX.Navigation]")]
	public partial class XFX_Navigation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _url;
		
		private string _order_num;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onorder_numChanging(string value);
    partial void Onorder_numChanged();
    #endregion
		
		public XFX_Navigation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_num", DbType="NChar(10)")]
		public string order_num
		{
			get
			{
				return this._order_num;
			}
			set
			{
				if ((this._order_num != value))
				{
					this.Onorder_numChanging(value);
					this.SendPropertyChanging();
					this._order_num = value;
					this.SendPropertyChanged("order_num");
					this.Onorder_numChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRoleMenu")]
	public partial class SysRoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _role_id;
		
		private int _menu_id;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<SysRole> _SysRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onmenu_idChanging(int value);
    partial void Onmenu_idChanged();
    #endregion
		
		public SysRoleMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._SysRole = default(EntityRef<SysRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_id", DbType="Int NOT NULL")]
		public int menu_id
		{
			get
			{
				return this._menu_id;
			}
			set
			{
				if ((this._menu_id != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmenu_idChanging(value);
					this.SendPropertyChanging();
					this._menu_id = value;
					this.SendPropertyChanged("menu_id");
					this.Onmenu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_SysRoleMenu", Storage="_Menu", ThisKey="menu_id", OtherKey="id", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.SysRoleMenu.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.SysRoleMenu.Add(this);
						this._menu_id = value.id;
					}
					else
					{
						this._menu_id = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRoleMenu", Storage="_SysRole", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysRoleMenu.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysRoleMenu.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[SysUser.Role]")]
	public partial class SysUser_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private int _role_id;
		
		private EntityRef<SysRole> _SysRole;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    #endregion
		
		public SysUser_Role()
		{
			this._SysRole = default(EntityRef<SysRole>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysUser_Role", Storage="_SysRole", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysUser_Role.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysUser_Role.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SysUser_Role", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SysUser_Role.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SysUser_Role.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPermission")]
	public partial class SysPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private EntitySet<SysRole_Permission> _SysRole_Permission;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public SysPermission()
		{
			this._SysRole_Permission = new EntitySet<SysRole_Permission>(new Action<SysRole_Permission>(this.attach_SysRole_Permission), new Action<SysRole_Permission>(this.detach_SysRole_Permission));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPermission_SysRole_Permission", Storage="_SysRole_Permission", ThisKey="id", OtherKey="permission_id")]
		public EntitySet<SysRole_Permission> SysRole_Permission
		{
			get
			{
				return this._SysRole_Permission;
			}
			set
			{
				this._SysRole_Permission.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysRole_Permission(SysRole_Permission entity)
		{
			this.SendPropertyChanging();
			entity.SysPermission = this;
		}
		
		private void detach_SysRole_Permission(SysRole_Permission entity)
		{
			this.SendPropertyChanging();
			entity.SysPermission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[SysRole.Permission]")]
	public partial class SysRole_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _role_id;
		
		private int _permission_id;
		
		private EntityRef<SysPermission> _SysPermission;
		
		private EntityRef<SysRole> _SysRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onpermission_idChanging(int value);
    partial void Onpermission_idChanged();
    #endregion
		
		public SysRole_Permission()
		{
			this._SysPermission = default(EntityRef<SysPermission>);
			this._SysRole = default(EntityRef<SysRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", DbType="Int NOT NULL")]
		public int permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					if (this._SysPermission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPermission_SysRole_Permission", Storage="_SysPermission", ThisKey="permission_id", OtherKey="id", IsForeignKey=true)]
		public SysPermission SysPermission
		{
			get
			{
				return this._SysPermission.Entity;
			}
			set
			{
				SysPermission previousValue = this._SysPermission.Entity;
				if (((previousValue != value) 
							|| (this._SysPermission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysPermission.Entity = null;
						previousValue.SysRole_Permission.Remove(this);
					}
					this._SysPermission.Entity = value;
					if ((value != null))
					{
						value.SysRole_Permission.Add(this);
						this._permission_id = value.id;
					}
					else
					{
						this._permission_id = default(int);
					}
					this.SendPropertyChanged("SysPermission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRole_Permission", Storage="_SysRole", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysRole_Permission.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysRole_Permission.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
